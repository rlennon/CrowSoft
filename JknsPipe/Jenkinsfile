pipeline {
  agent any
  stages {
    stage('Checkout code') {
	  	steps {
		  	checkout scm				
				}
			}	
	stage ('Build MVC')
		step {
			 cd /Projects/crowsoftmvc
			 dotnet build
			}
		
		
	stage ('Build Unit Test') {
		step{
			echo *** Unit test ***
			//Projects/crowsoft_unittests\bin\nunit-console.exe /xml=nunit-result.xml
			//cd /Projects/crowsoft_unittests
			//dotnet test
			}
		}
		
    stage('Run NUnit Test') {
	  	steps {
		  		//echo 'Nunit test will go in here'	
					//cd /
				}
			}	
		
    stage('Test ssh publisher ') {
	  	steps {
		  		sshPublisher(publishers: [sshPublisherDesc(configName: 'PublishOverSSHDevConn133', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/home/devadmin/TEST', remoteDirectorySDF: false, removePrefix: 'Projects/crowsoft_unittests/', sourceFiles: 'Projects/crowsoft_unittests/appconfig.json')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])			
				//sshPublisher '', execCommand: "sudo systemctl start crowsoft-webapp.service"
				}
			}	
	 stage('Stop app') {
	  	steps {
				sshagent(['dev']) {
				sh label: '', script: 'ansible devadmin@172.28.25.133 -a "sudo systemctl start crowsoft-webapp.service"' 
				//sh label: '', script: 'ssh devadmin@172.28.25.133 /bin/bash'
				//ssh label: '', script: '/bin/bash'
				//sh label: '', script: 'sudo systemctl start crowsoft-webapp.service'
				//testing webhook with a commit -- second go
					}
 				}
			}	
	 
	stage('Startapp') {
	  	steps {
		  	sshagent(['dev']) {
				sh label: '', script: 'pwd' 				
				}
			}	
	  }

	}
 }

